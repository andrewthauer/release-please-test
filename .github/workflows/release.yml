name: release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: "${{ secrets.GHA_TOKEN }}"
          release-type: ruby
          package-name: foo
          version-file: lib/foo/version.rb
          extra-files: |
            Gemfile.lock

      # - uses: actions/checkout@v3
      #   if: "${{ steps.release.outputs.pr }}"
      #   with:
      #     # ref: "${{ steps.release.outputs.pr.headBranchName }}"
      #     ref: release-please--branches--main--components--foo

      # - uses: ruby/setup-ruby@v1
      #   if: "${{ steps.release.outputs.pr }}"
      #   with:
      #     bundler-cache: true

      # - name: Update Gemfile.lock
      #   if: "${{ steps.release.outputs.pr }}"
      #   run: |
      #     # `bundler-cache: true` puts us in deployment mode.
      #     # We can't update the Gemfile.lock in deployment mode.
      #     bundle config unset deployment
      #     bundle install

      # - uses: stefanzweifel/git-auto-commit-action@v4
      #   if: "${{ steps.release.outputs.pr }}"
      #   with:
      #     commit_message: 'chore: update Gemfile.lock'

      - uses: actions/github-script@v6
        id: prep-release-pr
        if: "${{ steps.release.outputs.pr }}"
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: "${{ toJSON(fromJSON(steps.release.outputs.pr).number) }}",
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["automerge"],
            })

            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: "${{ toJSON(fromJSON(steps.release.outputs.pr).number) }}",
              event: 'APPROVE',
            });

      - uses: reitermarkus/automerge@v2
        id: automerge
        if: "${{ steps.release.outputs.pr }}"
        with:
          token: ${{ secrets.GHA_TOKEN }}
          required-labels: automerge
          pull-request: ${{ steps.release.outputs.pr.number }}
